{
  "name": "Development Tools - Deployment Automation",
  "nodes": [
    {
      "parameters": {"path": "development/tools/deployment-automation", "responseCode": 200, "options": {"responseHeaders": {"entries": [{"name": "Content-Type", "value": "application/json"}]}}},
      "id": "Webhook",
      "name": "Webhook Deployment Automation",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [200, 200]
    },
    {
      "parameters": {
        "functionCode": "const project=$json.project||{name:'app'}; const repo=$json.repo||null; const languages=$json.languages||['javascript'];\nconst cicd={ provider:'github-actions', workflows:['ci','release','deploy'], artifacts:true };\nconst environments=[{ name:'dev', strategy:'push-on-merge' }, { name:'staging', strategy:'manual-approve' }, { name:'prod', strategy:'tagged-release' }];\nconst deployTemplates=languages.map(l=>({ language:l, template: l==='javascript'?'node-docker':'generic-docker' }));\nreturn [{ json: { deployment: { cicd, environments, deployTemplates } } }];"
      },
      "id": "Plan",
      "name": "Generate Deployment Plan",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [460, 200]
    },
    {
      "parameters": {"functionCode": "return [{ json: { status: 'ok', deployment: $json.deployment } }];"},
      "id": "Respond",
      "name": "Respond",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [720, 200]
    }
  ],
  "connections": {
    "Webhook Deployment Automation": {"main": [[{"node": "Generate Deployment Plan", "type": "main", "index": 0}]]},
    "Generate Deployment Plan": {"main": [[{"node": "Respond", "type": "main", "index": 0}]]}
  },
  "settings": {"executionOrder": "v1"},
  "tags": ["development", "tools"],
  "versionId": "development-tools-deploy-v1"
}
