{
  "name": "Development Agent",
  "nodes": [
    {
      "parameters": {"path": "development/run", "responseCode": 200, "options": {"responseHeaders": {"entries": [{"name": "Content-Type", "value": "application/json"}]}}},
      "id": "Webhook",
      "name": "Webhook Development Input",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [200, 200]
    },
    {
      "parameters": {
        "functionCode": "const b=$json||{};\nconst requirements=b.requirements||b.spec||'';\nif(!requirements) throw new Error('requirements/spec is required');\nconst languages=b.languages||['python','javascript','java','csharp','go'];\nconst repo=b.repo||null;\nconst project=b.project||{ name: 'app', stack: 'node' };\nreturn [{ json: { requirements, languages, repo, project, options: b.options||{} } }];"
      },
      "id": "Normalize",
      "name": "Normalize Input",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [460, 200]
    },
    {
      "parameters": {
        "url": "={{$json.toolsBase || $env.N8N_BASE_URL || 'http://localhost:5678'}}/webhook/development/tools/code-generation",
        "sendBody": true,
        "jsonParameters": true,
        "bodyParametersJson": "={{ { requirements: $json.requirements, languages: $json.languages, project: $json.project } }}"
      },
      "id": "CodeGen",
      "name": "Code Generation",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [720, 120]
    },
    {
      "parameters": {
        "url": "={{$json.toolsBase || $env.N8N_BASE_URL || 'http://localhost:5678'}}/webhook/development/tools/testing-automation",
        "sendBody": true,
        "jsonParameters": true,
        "bodyParametersJson": "={{ { plan: $json.codegen?.plan, languages: $json.languages } }}"
      },
      "id": "Testing",
      "name": "Testing Automation",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [720, 280]
    },
    {
      "parameters": {
        "url": "={{$json.toolsBase || $env.N8N_BASE_URL || 'http://localhost:5678'}}/webhook/development/tools/deployment-automation",
        "sendBody": true,
        "jsonParameters": true,
        "bodyParametersJson": "={{ { project: $json.project, repo: $json.repo, languages: $json.languages } }}"
      },
      "id": "Deploy",
      "name": "Deployment Automation",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [980, 200]
    },
    {
      "parameters": {
        "promptType": "chat",
        "provider": "openai",
        "model": "gpt-4",
        "systemMessage": "You are the Development Agent. Using requirements, codegen plan, testing strategy, and deployment plan, produce a structured development plan and artifacts summary. Enforce security best practices, code quality, TDD, CI/CD, and multi-language considerations. Output strict JSON with: architecture, components, code_scaffolds, quality_checks, security_scans, testing_plan, ci_cd, docs_plan, risks, performance, metrics, next_steps.",
        "inputKey": "={{$json}}",
        "toolsAgent": true,
        "tooling": {"allowHttp": true, "allowCode": false},
        "temperature": 0.2,
        "maxTokens": 1200
      },
      "id": "Synthesize",
      "name": "AI Synthesize Dev Plan",
      "type": "n8n-nodes-base.aiAgent",
      "typeVersion": 1,
      "position": [1240, 200]
    },
    {
      "parameters": {"functionCode": "return [{ json: { status: 'ok', plan: items[0].json, codegen: $json.codegen, testing: $json.testing, deployment: $json.deployment } }];"},
      "id": "Respond",
      "name": "Respond",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [1500, 200]
    }
  ],
  "connections": {
    "Webhook Development Input": {"main": [[{"node": "Normalize Input", "type": "main", "index": 0}]]},
    "Normalize Input": {"main": [[{"node": "Code Generation", "type": "main", "index": 0}], [{"node": "Testing Automation", "type": "main", "index": 0}], [{"node": "Deployment Automation", "type": "main", "index": 0}]]},
    "Code Generation": {"main": [[{"node": "AI Synthesize Dev Plan", "type": "main", "index": 0}]]},
    "Testing Automation": {"main": [[{"node": "AI Synthesize Dev Plan", "type": "main", "index": 0}]]},
    "Deployment Automation": {"main": [[{"node": "AI Synthesize Dev Plan", "type": "main", "index": 0}]]},
    "AI Synthesize Dev Plan": {"main": [[{"node": "Respond", "type": "main", "index": 0}]]}
  },
  "settings": {"executionOrder": "v1"},
  "tags": ["development", "agent"],
  "versionId": "development-agent-v1"
}
