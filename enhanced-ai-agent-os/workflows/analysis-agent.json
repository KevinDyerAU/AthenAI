{
  "name": "Analysis Agent",
  "nodes": [
    {
      "parameters": {"path": "analysis/run", "responseCode": 200, "options": {"responseHeaders": {"entries": [{"name": "Content-Type", "value": "application/json"}]}}},
      "id": "Webhook",
      "name": "Webhook Analysis Input",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [200, 200]
    },
    {
      "parameters": {
        "functionCode": "const b=$json||{};\nconst dataset=b.dataset||b.data||[];\nif(!Array.isArray(dataset)) throw new Error('dataset must be an array of records');\nconst target=b.target||null;\nconst timeKey=b.timeKey||b.time_key||null;\nconst features=b.features||null;\nconst tasks=Array.isArray(b.tasks)?b.tasks:['describe','quality','correlation','regression','anomaly','visualize'];\nreturn [{ json: { dataset, target, timeKey, features, tasks, options: b.options||{} } }];"
      },
      "id": "Normalize",
      "name": "Normalize Input",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [460, 200]
    },
    {
      "parameters": {
        "functionCode": "// Data quality assessment: missing values, outliers (z>3), basic schema\nfunction isNumber(x){return typeof x==='number' && isFinite(x);}\nconst rows=$json.dataset||[];\nconst keys=[...new Set(rows.flatMap(r=>Object.keys(r||{})))];\nconst counts=Object.fromEntries(keys.map(k=>[k, {missing:0,numeric:0,nonNumeric:0,unique:new Set()}]));\nfor(const r of rows){ for(const k of keys){ const v=r[k]; if(v===null||v===undefined||v==='') counts[k].missing++; if(isNumber(v)) counts[k].numeric++; else if(v!==null&&v!==undefined&&v!=='') counts[k].nonNumeric++; counts[k].unique.add(v); } }\nconst summary=keys.map(k=>({ key:k, missing:counts[k].missing, numeric:counts[k].numeric, nonNumeric:counts[k].nonNumeric, uniqueCount:counts[k].unique.size }));\nreturn [{ json: { ...$json, quality: { fields: summary, rowCount: rows.length } } }];"
      },
      "id": "Quality",
      "name": "Data Quality Assessment",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [720, 120]
    },
    {
      "parameters": {
        "url": "={{$json.toolsBase || $env.N8N_BASE_URL || 'http://localhost:5678'}}/webhook/analysis/tools/statistical-analysis",
        "sendBody": true,
        "jsonParameters": true,
        "bodyParametersJson": "={{ { dataset: $json.dataset, target: $json.target, timeKey: $json.timeKey, features: $json.features, tasks: $json.tasks, options: $json.options } }}"
      },
      "id": "Stats",
      "name": "Statistical Analysis",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [720, 280]
    },
    {
      "parameters": {
        "url": "={{$json.toolsBase || $env.N8N_BASE_URL || 'http://localhost:5678'}}/webhook/analysis/tools/data-visualization",
        "sendBody": true,
        "jsonParameters": true,
        "bodyParametersJson": "={{ { dataset: $json.dataset, timeKey: $json.timeKey, target: $json.target, analysis: $json.analysis, recommendations: $json.recommendations } }}"
      },
      "id": "Viz",
      "name": "Visualization Builder",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [980, 200]
    },
    {
      "parameters": {
        "promptType": "chat",
        "provider": "openai",
        "model": "gpt-4",
        "systemMessage": "You are the Analysis Agent. Using provided analysis results, data quality, and visualization specs, produce a comprehensive analytical report. Include: executive_summary, data_quality_findings, key_insights, statistical_tests (with assumptions), predictive_models (metrics), anomalies, visualizations (list with titles and types), recommendations, limitations, confidence. Output strict JSON.",
        "inputKey": "={{$json}}",
        "toolsAgent": true,
        "tooling": {"allowHttp": true, "allowCode": false},
        "temperature": 0.2,
        "maxTokens": 1200
      },
      "id": "Synthesize",
      "name": "AI Synthesize Analysis Report",
      "type": "n8n-nodes-base.aiAgent",
      "typeVersion": 1,
      "position": [1240, 200]
    },
    {
      "parameters": {
        "functionCode": "return [{ json: { status: 'ok', report: items[0].json, quality: $json.quality } }];"
      },
      "id": "Respond",
      "name": "Respond",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [1500, 200]
    }
  ],
  "connections": {
    "Webhook Analysis Input": {"main": [[{"node": "Normalize Input", "type": "main", "index": 0}]]},
    "Normalize Input": {"main": [[{"node": "Data Quality Assessment", "type": "main", "index": 0}], [{"node": "Statistical Analysis", "type": "main", "index": 0}]]},
    "Data Quality Assessment": {"main": [[{"node": "Statistical Analysis", "type": "main", "index": 0}]]},
    "Statistical Analysis": {"main": [[{"node": "Visualization Builder", "type": "main", "index": 0}]]},
    "Visualization Builder": {"main": [[{"node": "AI Synthesize Analysis Report", "type": "main", "index": 0}]]},
    "AI Synthesize Analysis Report": {"main": [[{"node": "Respond", "type": "main", "index": 0}]]}
  },
  "settings": {"executionOrder": "v1"},
  "tags": ["analysis", "agent"],
  "versionId": "analysis-agent-v1"
}
