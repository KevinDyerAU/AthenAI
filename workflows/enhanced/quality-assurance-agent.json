{
  "name": "Quality Assurance Agent",
  "nodes": [
    {
      "parameters": {"path": "quality-assurance/run", "responseCode": 200, "options": {"responseHeaders": {"entries": [{"name": "Content-Type", "value": "application/json"}]}}},
      "id": "Webhook",
      "name": "Webhook QA Input",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [200, 200]
    },
    {
      "parameters": {
        "functionCode": "const b=$json||{};\nconst artifacts=Array.isArray(b.artifacts)?b.artifacts:[]; // [{id,type,content,metadata}]\nif(artifacts.length===0) throw new Error('artifacts (array) is required');\nconst standards=Array.isArray(b.standards)?b.standards:["ISO27001","GDPR","OWASP"];\nconst quality=b.quality||{thresholds:{passRate:0.9, p95_latency_ms:1000}};\nreturn [{ json: { artifacts, standards, quality, context: b.context||{} } }];"
      },
      "id": "Normalize",
      "name": "Normalize Input",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [460, 200]
    },
    {
      "parameters": {
        "url": "={{$json.toolsBase || $env.N8N_BASE_URL || 'http://localhost:5678'}}/webhook/qa/tools/automated-testing",
        "sendBody": true,
        "jsonParameters": true,
        "bodyParametersJson": "={{ { artifacts: $json.artifacts, quality: $json.quality } }}"
      },
      "id": "Testing",
      "name": "Automated Testing",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [720, 120]
    },
    {
      "parameters": {
        "url": "={{$json.toolsBase || $env.N8N_BASE_URL || 'http://localhost:5678'}}/webhook/qa/tools/compliance-checking",
        "sendBody": true,
        "jsonParameters": true,
        "bodyParametersJson": "={{ { artifacts: $json.artifacts, standards: $json.standards } }}"
      },
      "id": "Compliance",
      "name": "Compliance Checking",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [720, 280]
    },
    {
      "parameters": {
        "promptType": "chat",
        "provider": "openai",
        "model": "gpt-4",
        "systemMessage": "You are the Quality Assurance Agent. Use the Think Tool to analyze quality requirements and testing strategies. Using artifacts, automated test results, metrics, and compliance findings, produce a strict-JSON quality report with: summary, coverage, pass_rate, failures, performance (p50,p90,p95 latency), defects (severity,count,items), compliance (status, issues), recommendations (quick_fixes, long_term), continuous_improvement (actions, owners), dashboards (metrics), certification (status, evidence), next_steps.",
        "inputKey": "={{$json}}",
        "tools": [
          {
            "name": "toolThink",
            "description": "Think through quality analysis and testing strategies"
          }
        ],
        "toolsAgent": true,
        "tooling": {"allowHttp": true, "allowCode": false},
        "temperature": 0.2,
        "maxTokens": 1200
      },
      "id": "Synthesize",
      "name": "AI Synthesize QA Report",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1,
      "position": [980, 200]
    },
    {
      "parameters": {"functionCode": "return [{ json: { status: 'ok', report: items[0].json, tests: $json.tests, metrics: $json.metrics, compliance: $json.compliance } }];"},
      "id": "Respond",
      "name": "Respond",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [1240, 200]
    }
  ],
  "connections": {
    "Webhook QA Input": {"main": [[{"node": "Normalize Input", "type": "main", "index": 0}]]},
    "Normalize Input": {"main": [[{"node": "Automated Testing", "type": "main", "index": 0}], [{"node": "Compliance Checking", "type": "main", "index": 0}]]},
    "Automated Testing": {"main": [[{"node": "AI Synthesize QA Report", "type": "main", "index": 0}]]},
    "Compliance Checking": {"main": [[{"node": "AI Synthesize QA Report", "type": "main", "index": 0}]]},
    "AI Synthesize QA Report": {"main": [[{"node": "Respond", "type": "main", "index": 0}]]}
  },
  "settings": {"executionOrder": "v1"},
  "tags": ["quality", "agent"],
  "versionId": "qa-agent-v1"
}
