{
  "name": "Execution Agent",
  "nodes": [
    {
      "parameters": {"path": "execution/run", "responseCode": 200, "options": {"responseHeaders": {"entries": [{"name": "Content-Type", "value": "application/json"}]}}},
      "id": "Webhook",
      "name": "Webhook Execution Input",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [200, 200]
    },
    {
      "parameters": {
        "functionCode": "const b=$json||{};\nconst tasks=Array.isArray(b.tasks)?b.tasks:[]; // [{id,title,deps:[],qualityGate?:{...}}]\nif(tasks.length===0) throw new Error('tasks (array) is required');\nconst policy=b.policy||{parallelism:4,maxRetries:3,backoff:'exponential'};\nconst monitoring=b.monitoring||{enabled:true};\nreturn [{ json: { tasks, policy, monitoring, metadata: b.metadata||{} } }];"
      },
      "id": "Normalize",
      "name": "Normalize Input",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [460, 200]
    },
    {
      "parameters": {
        "url": "={{$json.toolsBase || $env.N8N_BASE_URL || 'http://localhost:5678'}}/webhook/execution/tools/parallel-processing",
        "sendBody": true,
        "jsonParameters": true,
        "bodyParametersJson": "={{ { tasks: $json.tasks, policy: $json.policy } }}"
      },
      "id": "ParallelPlan",
      "name": "Parallel Processing Plan",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [720, 120]
    },
    {
      "parameters": {
        "url": "={{$json.toolsBase || $env.N8N_BASE_URL || 'http://localhost:5678'}}/webhook/execution/tools/error-recovery",
        "sendBody": true,
        "jsonParameters": true,
        "bodyParametersJson": "={{ { policy: $json.policy, plan: $json.plan } }}"
      },
      "id": "Recovery",
      "name": "Error Recovery Policy",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [720, 280]
    },
    {
      "parameters": {
        "functionCode": "// basic progress tracking scaffold\nconst plan=$json.plan||{batches:[]};\nconst total=(plan.batches||[]).reduce((s,b)=>s+(b.tasks?b.tasks.length:0),0);\nreturn [{ json: { ...$json, progress: { total, completed: 0, failed: 0, in_progress: 0 } } }];"
      },
      "id": "Progress",
      "name": "Init Progress Tracking",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [980, 200]
    },
    {
      "parameters": {
        "promptType": "chat",
        "provider": "openai",
        "model": "gpt-4",
        "systemMessage": "You are the Execution Agent. Using tasks, parallel plan, recovery policy, and progress scaffold, produce an execution orchestration plan with quality gates, monitoring hooks, and escalation. Output strict JSON with: orchestration (batches, concurrency), error_policies (retries, backoff, circuit_breakers), progress_model, quality_gates, monitoring (metrics, alerts), escalation (conditions, actions), runbook (steps), risks, next_steps.",
        "inputKey": "={{$json}}",
        "toolsAgent": true,
        "tooling": {"allowHttp": true, "allowCode": false},
        "temperature": 0.2,
        "maxTokens": 1200
      },
      "id": "Synthesize",
      "name": "AI Synthesize Execution Plan",
      "type": "n8n-nodes-base.aiAgent",
      "typeVersion": 1,
      "position": [1240, 200]
    },
    {
      "parameters": {"functionCode": "return [{ json: { status: 'ok', plan: items[0].json, parallel: $json.plan, recovery: $json.recovery, progress: $json.progress } }];"},
      "id": "Respond",
      "name": "Respond",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [1500, 200]
    }
  ],
  "connections": {
    "Webhook Execution Input": {"main": [[{"node": "Normalize Input", "type": "main", "index": 0}]]},
    "Normalize Input": {"main": [[{"node": "Parallel Processing Plan", "type": "main", "index": 0}], [{"node": "Error Recovery Policy", "type": "main", "index": 0}]]},
    "Parallel Processing Plan": {"main": [[{"node": "Init Progress Tracking", "type": "main", "index": 0}], [{"node": "AI Synthesize Execution Plan", "type": "main", "index": 0}]]},
    "Error Recovery Policy": {"main": [[{"node": "AI Synthesize Execution Plan", "type": "main", "index": 0}]]},
    "Init Progress Tracking": {"main": [[{"node": "AI Synthesize Execution Plan", "type": "main", "index": 0}]]},
    "AI Synthesize Execution Plan": {"main": [[{"node": "Respond", "type": "main", "index": 0}]]}
  },
  "settings": {"executionOrder": "v1"},
  "tags": ["execution", "agent"],
  "versionId": "execution-agent-v1"
}
