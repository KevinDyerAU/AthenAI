{
  "name": "Planning Agent",
  "nodes": [
    {
      "parameters": {"path": "planning/run", "responseCode": 200, "options": {"responseHeaders": {"entries": [{"name": "Content-Type", "value": "application/json"}]}}},
      "id": "Webhook",
      "name": "Webhook Planning Input",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [200, 200]
    },
    {
      "parameters": {
        "functionCode": "const b=$json||{};\nconst goals=b.goals||[];\nif(!Array.isArray(goals)||goals.length===0) throw new Error('goals (array) is required');\nconst constraints=b.constraints||{};\nconst agents=b.agents||[]; // [{name, skills:[...], capacity:{units: number}}]
const tasks=b.tasks||[]; // [{id, title, effort, skills:[...], deps:[]]
const methodology=b.methodology||'hybrid';\nconst horizon=b.horizon||{start:new Date().toISOString(), end:null};\nreturn [{ json: { goals, constraints, agents, tasks, methodology, horizon, options: b.options||{} } }];"
      },
      "id": "Normalize",
      "name": "Normalize Input",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [460, 200]
    },
    {
      "parameters": {
        "url": "={{$json.toolsBase || $env.N8N_BASE_URL || 'http://localhost:5678'}}/webhook/planning/tools/resource-allocation",
        "sendBody": true,
        "jsonParameters": true,
        "bodyParametersJson": "={{ { agents: $json.agents, tasks: $json.tasks, constraints: $json.constraints } }}"
      },
      "id": "Allocation",
      "name": "Resource Allocation",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [720, 120]
    },
    {
      "parameters": {
        "url": "={{$json.toolsBase || $env.N8N_BASE_URL || 'http://localhost:5678'}}/webhook/planning/tools/timeline-optimization",
        "sendBody": true,
        "jsonParameters": true,
        "bodyParametersJson": "={{ { tasks: $json.tasks, allocation: $json.allocation, constraints: $json.constraints, horizon: $json.horizon } }}"
      },
      "id": "Timeline",
      "name": "Timeline Optimization",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [720, 280]
    },
    {
      "parameters": {
        "promptType": "chat",
        "provider": "openai",
        "model": "gpt-4",
        "systemMessage": "You are the Planning Agent. Use the Think Tool to analyze goals, constraints, resource allocation, and optimized timeline to produce a strategic plan with risks and monitoring. Output strict JSON with: strategy, goal_breakdown, prioritized_backlog, allocation_summary, schedule, risks, mitigations, monitoring, metrics, methodology, scenario_analysis, replanning_triggers, next_steps.",
        "inputKey": "={{$json}}",
        "tools": [
          {
            "name": "toolThink",
            "description": "Think through planning strategy and analyze complex requirements"
          }
        ],
        "toolsAgent": true,
        "tooling": {"allowHttp": true, "allowCode": false},
        "temperature": 0.2,
        "maxTokens": 1200
      },
      "id": "Synthesize",
      "name": "AI Synthesize Plan",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1,
      "position": [980, 200]
    },
    {
      "parameters": {"functionCode": "return [{ json: { status: 'ok', plan: items[0].json, allocation: $json.allocation, schedule: $json.schedule } }];"},
      "id": "Respond",
      "name": "Respond",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [1240, 200]
    }
  ],
  "connections": {
    "Webhook Planning Input": {"main": [[{"node": "Normalize Input", "type": "main", "index": 0}]]},
    "Normalize Input": {"main": [[{"node": "Resource Allocation", "type": "main", "index": 0}], [{"node": "Timeline Optimization", "type": "main", "index": 0}]]},
    "Resource Allocation": {"main": [[{"node": "Timeline Optimization", "type": "main", "index": 0}], [{"node": "AI Synthesize Plan", "type": "main", "index": 0}]]},
    "Timeline Optimization": {"main": [[{"node": "AI Synthesize Plan", "type": "main", "index": 0}]]},
    "AI Synthesize Plan": {"main": [[{"node": "Respond", "type": "main", "index": 0}]]}
  },
  "settings": {"executionOrder": "v1"},
  "tags": ["planning", "agent"],
  "versionId": "planning-agent-v1"
}
